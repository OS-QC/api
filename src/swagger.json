{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ERolUser": {
				"enum": [
					"admin",
					"user"
				],
				"type": "string"
			},
			"IUserAttributes": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"avatar": {
						"type": "string",
						"nullable": true
					},
					"rol": {
						"$ref": "#/components/schemas/ERolUser"
					},
					"password": {
						"type": "string"
					},
					"status": {
						"type": "boolean"
					},
					"tokenPush": {
						"type": "string"
					},
					"dob": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"email",
					"rol",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponseAllUser": {
				"properties": {
					"total": {
						"type": "number",
						"format": "double"
					},
					"totalPage": {
						"type": "number",
						"format": "double"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/IUserAttributes"
						},
						"type": "array"
					},
					"actualPage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"total",
					"totalPage",
					"data",
					"actualPage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserFilter": {
				"properties": {
					"pag": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUserAttributes.Exclude_keyofIUserAttributes.id-or-avatar__": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IUserAttributes.id-or-avatar_": {
				"$ref": "#/components/schemas/Pick_IUserAttributes.Exclude_keyofIUserAttributes.id-or-avatar__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Partial_Pick_IUserAttributes.id-or-avatar__": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Optional_IUserAttributes.id-or-avatar_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_IUserAttributes.id-or-avatar_"
					},
					{
						"$ref": "#/components/schemas/Partial_Pick_IUserAttributes.id-or-avatar__"
					}
				],
				"description": "Type helper for making certain fields of an object optional. This is helpful\nfor creating the `CreationAttributes` from your `Attributes` for a Model."
			},
			"Pick_IUserAttributes.email-or-name-or-password_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IUserCreationAttributes": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Optional_IUserAttributes.id-or-avatar_"
					},
					{
						"$ref": "#/components/schemas/Pick_IUserAttributes.email-or-name-or-password_"
					}
				]
			},
			"EExchange": {
				"enum": [
					"COINGECKO_API_URL",
					"COINBASE_API_URL",
					"COINMARKETCAP",
					"UNISWAP"
				],
				"type": "string"
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "apiKey",
				"name": "Authorization",
				"scheme": "bearer",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "api-flash",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/users/{userId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUserAttributes"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/users/all": {
			"get": {
				"operationId": "All",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"data": {
											"anyOf": [
												{
													"items": {
														"$ref": "#/components/schemas/IUserAttributes"
													},
													"type": "array"
												},
												{
													"$ref": "#/components/schemas/IResponseAllUser"
												}
											]
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"summary": "Obtener todos los usuarios con paginación.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pag",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUserAttributes"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserCreationAttributes"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"user": {
											"allOf": [
												{
													"$ref": "#/components/schemas/IUserAttributes"
												}
											],
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"user",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Registra un nuevo usuario.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserCreationAttributes"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Usuario autenticado y token de autenticación o mensaje de error.",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"token": {
													"type": "string"
												},
												"user": {
													"$ref": "#/components/schemas/IUserAttributes"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"token",
												"user",
												"success"
											],
											"type": "object"
										},
										{
											"properties": {
												"status": {
													"type": "boolean",
													"enum": [
														false
													],
													"nullable": false
												},
												"message": {
													"type": "string"
												}
											},
											"required": [
												"status",
												"message"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"description": "Inicia sesión con credenciales de usuario.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- Credenciales de inicio de sesión (email y contraseña).",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object",
								"description": "- Credenciales de inicio de sesión (email y contraseña)."
							}
						}
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "Me",
				"responses": {
					"201": {
						"description": "User Found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"user": {
											"allOf": [
												{
													"$ref": "#/components/schemas/IUserAttributes"
												}
											],
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"user",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Obtiene los detalles del usuario autenticado.",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/contract/contact": {
			"post": {
				"operationId": "Contact",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Verificar contrato.",
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/contract/all": {
			"get": {
				"operationId": "All",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Verificar contrato.",
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EExchange"
						}
					},
					{
						"in": "query",
						"name": "amount",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "init",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/contract/block": {
			"get": {
				"operationId": "Block",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": []
			}
		},
		"/contract/transaction": {
			"get": {
				"operationId": "Transaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": []
			}
		},
		"/contract/estimatedGas": {
			"get": {
				"operationId": "EstimatedGas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": []
			}
		},
		"/contract/loanOne": {
			"get": {
				"operationId": "LoanOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": []
			}
		},
		"/contract/dinamicContract": {
			"post": {
				"operationId": "DinamicContract",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {},
										"token": {
											"type": "string"
										},
										"data": {
											"nullable": true
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"tokenAddress": {
										"type": "string"
									}
								},
								"required": [
									"amount",
									"tokenAddress"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}